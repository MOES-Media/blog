---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const pathname = new URL(Astro.request.url).pathname;
const normalizedPathname = pathname.replace(import.meta.env.BASE_URL, '') || '/';

const hrefString = href ? String(href) : '/';
const normalizedHref = hrefString.replace(import.meta.env.BASE_URL, '') || '/';

const isActive = href && (
  normalizedHref === normalizedPathname || 
  (normalizedHref === '/' && normalizedPathname === '/') ||
  (normalizedPathname.startsWith(normalizedHref + '/') && normalizedHref !== '/')
);
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
</style>